from random import choice
HANGMAN = (
    """
     ------
     |    |
     |
     |
     |
     |
     |
    ----------
    """,
    """
     ------
     |    |
     |    O
     |
     |
     |
     |
    ----------
    """,
    """
     ------
     |    |
     |    O
     |    |
     | 
     |   
     |    
    ----------
    """,
    """
     ------
     |    |
     |    O
     |   /|
     |   
     |   
     |   
    ----------
    """,
    """
     ------
     |    |
     |    O
     |   /|\\
     |   
     |   
     |     
    ----------
    """,
    """
     ------
     |    |
     |    O
     |   /|\\
     |   /
     |   
     |    
    ----------
    """,
    """
     ------
     |    |
     |    O
     |   /|\\
     |   / \\
     |   
     |   
    ----------
    """
)
d = {
    'Посуда' : ['тарелка', "ложка", "вилка", "нож", "сковородка","дуршлаг", "кастрюля","кружка","сито","половник"],
    'Фрукты' : ["яблоко", "груша", "банан","абрикос", "персик", "лимон","апельсин","мандарин","помело","киви", "гранат"],
    'Овощи' : ["саша","огурец","помидор","картошка", "лук", "морковь","дотеры", "свекла", "чеснок","баклажан","кабачок","перец"],
    'Игры' : ["прятки", "догонялки", "пятнашки","майнкрафт", "валорант","роблокс","бравлик","овервотч","фортнайт","геншин","хонкай"],
    'Сериалы' : ["гадалка","слепая","мухтар","аркейн","эйфория","молодежка","кухня","сашатаня","универ","интерны","пацаны"],
    "Фильмы" : ["брат","оно","драйв","форсаж","интерстеллар","звонок","крик","субстанция", "титаник","хатико","головоломка","шрек"],
    "Животные" : ["слон","медведь","капибара","лошадь","кот","собака","хомяк","крыса","волк","лиса","заяц","олень","лама","носорог","жираф"],
    "Растения" : ["щовель", "одуванчик","ландыш","лаванда","дуб","осина","береза","клен","клевер","роза","тюльпан","ольха","тополь"],
    "Мебель" : ["диван","стул","стол","шкаф","тумба","комод","кровать","полка","кресло","стеллаж","табурет", "дверь"],
    "Города" : ["пермь","москва","губаха","киров","владивосток","кудымкар","уфа","тюмень","новосибирск","екатеринбург","омск","воронеж","торжок"]
}
while True:
    try:
        print('Выберите категорию: ')
        for i in d:
            print(i, end=' ')
        print()
        i = input()
        i = i.lower()
        i = i[0].upper() + i[1:]
        max_wrong = len(HANGMAN) - 1
        WORDS = d.get(i)  # Слова для угадывания
        word = choice(WORDS)  # Слово, которое нужно угадать
        so_far = "_" * len(word)  # Одна черточка для каждой буквы в слове, которое нужно угадать
        wrong = 0  # Количество неверных предположений, сделанных игроком
        used = []  # Буквы уже угаданы

        while wrong < max_wrong and so_far != word:
            print(HANGMAN[wrong])  # Вывод висельника по индексу
            print("\nВы использовали следующие буквы:\n", used)
            print("\nНа данный момент слово выглядит так:\n", so_far)

            guess = input("\n\nВведите свое предположение: ")  # Пользователь вводит предполагаемую букву
            guess = guess.lower()
            if guess == word:
                break
            if len(guess) == 1 and guess.isalpha():
                print(f"Вы ввели букву: {guess}")
                while guess in used:
                    print("Вы уже вводили букву",
                          guess)  # Если буква уже вводилась ранее, то выводим соответствующее сообщение
                    guess = input("Введите свое предположение: ")  # Пользователь вводит предполагаемую букву

                used.append(guess)  # В список использованных букв добавляется введённая буква

                if guess in word:  # Если введённая буква есть в загаданном слове, то выводим соответствующее сообщение
                    print("\nДа!", guess, "есть в слове!")
                    new = ""
                    for i in range(len(word)):  # В цикле добавляем найденную букву в нужное место
                        if guess == word[i]:
                            new += guess
                        else:
                            new += so_far[i]
                    so_far = new

                else:
                    print(
                        "\nИзвините, буквы \"" + guess + "\" нет в слове.")  # Если буквы нет, то выводим соответствующее сообщение
                    wrong += 1
            else:
                print("Ошибка: пожалуйста, введите только одну букву.")


        if wrong == max_wrong:  # Если игрок превысил кол-во ошибок, то его повесили
            print(HANGMAN[wrong])
            print("\nТебя повесили!")
        else:  # Если кол-во ошибок не превышено, то игрок выиграл
            print("\nВы угадали слово!")

        print("\nЗагаданное слово было \"" + word + '\"')
        break
    except:
        print('Такой категории нет')
